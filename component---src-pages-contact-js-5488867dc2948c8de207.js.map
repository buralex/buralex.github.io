{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Header/index.js","webpack:///./src/images/logo.svg","webpack:///./src/layouts_old/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","d","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","Header","siteTitle","className","src","alt","defaultProps","p","memo","console","log","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"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","file":"component---src-pages-contact-js-5488867dc2948c8de207.js","sourcesContent":["import React from \"react\"\nimport {Link} from \"gatsby\"\n\nimport Layout from \"src/layouts_old\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n    <div>\n        <SEO title=\"Contacts\"/>\n        <h1>Contacts</h1>\n        <p>Welcome to page 2</p>\n        <Link to=\"/\">Go back to the homepage</Link>\n    </div>\n)\n\nexport default SecondPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import {Link} from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React, {useRef, useEffect, useState} from 'react';\nimport Logo from 'src/images/logo.svg';\nimport throttle from 'lodash/throttle';\n\nimport './styles.scss';\n\n// const Header = ({siteTitle}) => (\n//     <header className=\"header py-2 px-5\">\n//         <div className=\"container-fluid\">\n//             <div className=\"logo\">\n//                 <img\n//                     src={Logo}\n//                     width=\"35\"\n//                     height=\"35\"\n//                     alt=\"logo\"\n//                 />\n//             </div>\n//             <div className=\"d-flex justify-content-between\">\n//                 <h4 className=\"mb-0\">Alexandr Burlachenko</h4>\n//                 <ul className=\"navbar\">\n//                     <li><Link to=\"/\" activeClassName=\"active\">About</Link></li>\n//                     <li><Link to=\"/projects\" activeClassName=\"active\">Projects</Link></li>\n//                     <li><Link to=\"/contact\" activeClassName=\"active\">Contact</Link></li>\n//                 </ul>\n//             </div>\n//         </div>\n//     </header>\n// )\n// const hideOrShowNav = ({currentScrollPos, prevScrollpos, navElement}) => {\n//     if (prevScrollpos > currentScrollPos) {\n//         // document.getElementById('navbar').style.top = '0';\n//         console.log('navElement UUUUUUUUUU', navElement);\n//         navElement.style.top = '0';\n//         // navElement.classList.add('fixed-header');\n//     } else if (currentScrollPos > 210) {\n//         console.log('__DDDDDDDDDDDD', navElement);\n//         // document.getElementById('navbar').style.top = '-50px';\n//         navElement.style.top = '-70px';\n//         // navElement.classList.remove('fixed-header');\n//     }\n// };\n// let prevScrollpos = window.pageYOffset;\n// const makeScrollHandler = navElement => () => {\n//     const currentScrollPos = window.pageYOffset || document.documentElement.scrollTop;\n//     const SCROLL_TOP_LIMIT = 200;\n//     console.log(currentScrollPos);\n//     console.log('prev', prevScrollpos);\n//\n//     if (currentScrollPos > SCROLL_TOP_LIMIT) {\n//         navElement.classList.add('fixed-header');\n//         hideOrShowNav({currentScrollPos, prevScrollpos, navElement});\n//     } else {\n//         navElement.classList.remove('fixed-header');\n//     }\n//\n//     prevScrollpos = currentScrollPos;\n// };\n\nconst Header = ({siteTitle}) => {\n\n    return (\n        <header className=\"masthead bg-primary text-white text-center\">\n            <div className=\"container d-flex align-items-center flex-column\">\n                <img className=\"masthead-avatar mb-5\" src=\"img/avataaars.svg\" alt=\"\" />\n\n                <h1 className=\"masthead-heading text-uppercase mb-0\">Start Bootstrap</h1>\n\n                <div className=\"divider-custom divider-light\">\n                    <div className=\"divider-custom-line\" />\n                    <div className=\"divider-custom-icon\">\n                        <i className=\"fas fa-star\" />\n                    </div>\n                    <div className=\"divider-custom-line\" />\n                </div>\n\n                <p className=\"masthead-subheading font-weight-light mb-0\">\n                    Graphic Artist - Web Designer - Illustrator\n                </p>\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n    siteTitle: ``,\n};\n\nexport default Header;\n","module.exports = __webpack_public_path__ + \"static/logo-3cd21be2c021513bc7ca474aa8a6ac0c.svg\";","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {StaticQuery, graphql} from 'gatsby';\n\nimport Header from 'src/components/Header';\n\nconst Frame = () => (\n    <div className=\"frame\">\n        <div className=\"frame--top\" />\n        <div className=\"frame--right\" />\n        <div className=\"frame--bottom\" />\n        <div className=\"frame--left\" />\n    </div>\n);\n\nconst Layout = ({children}) => {\n    console.log('RENDER_LAYOUT');\n    // console.log('wrapPageElement', wrapPageElement);\n\n    return (\n        <>\n            {/*<Header siteTitle=\"alexandr burlchenko\" />*/}\n\n            {/*<Frame />*/}\n\n            <div className=\"container-fluid\">{children}</div>\n\n            {/*<footer className=\"footer\">{new Date().getFullYear()}, Built by Alexandr</footer>*/}\n        </>\n    );\n\n    return (\n        <StaticQuery\n            query={graphql`\n                query SiteTitleQuery {\n                    site {\n                        siteMetadata {\n                            title\n                        }\n                    }\n                }\n            `}\n            render={data => (\n                <>\n                    <Header siteTitle={data.site.siteMetadata.title} />\n\n                    <Frame />\n\n                    <div className=\"container-fluid\">{children}</div>\n\n                    <footer className=\"footer\">{new Date().getFullYear()}, Built by Alexandr</footer>\n                </>\n            )}\n        />\n    );\n};\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default React.memo(Layout);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport {useStaticQuery, graphql} from \"gatsby\"\n\nfunction SEO({description, lang, meta, title}) {\n    const {site} = useStaticQuery(\n        graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n    )\n\n    const metaDescription = description || site.siteMetadata.description\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:title`,\n                    content: title,\n                },\n                {\n                    property: `og:description`,\n                    content: metaDescription,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: metaDescription,\n                },\n            ].concat(meta)}\n        />\n    )\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    description: ``,\n}\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}